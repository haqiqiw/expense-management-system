// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	context "context"
	db "expense-management-system/internal/db"
	entity "expense-management-system/internal/entity"

	mock "github.com/stretchr/testify/mock"
)

// ApprovalRepository is an autogenerated mock type for the ApprovalRepository type
type ApprovalRepository struct {
	mock.Mock
}

// CreateTx provides a mock function with given fields: ctx, exec, approval
func (_m *ApprovalRepository) CreateTx(ctx context.Context, exec db.Executor, approval *entity.Approval) error {
	ret := _m.Called(ctx, exec, approval)

	if len(ret) == 0 {
		panic("no return value specified for CreateTx")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, db.Executor, *entity.Approval) error); ok {
		r0 = rf(ctx, exec, approval)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewApprovalRepository creates a new instance of ApprovalRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewApprovalRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *ApprovalRepository {
	mock := &ApprovalRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
