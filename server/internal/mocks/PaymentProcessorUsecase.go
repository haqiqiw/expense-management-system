// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	context "context"
	model "expense-management-system/internal/model"

	mock "github.com/stretchr/testify/mock"
)

// PaymentProcessorUsecase is an autogenerated mock type for the PaymentProcessorUsecase type
type PaymentProcessorUsecase struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx, req
func (_m *PaymentProcessorUsecase) Execute(ctx context.Context, req *model.PaymentProcessorRequest) error {
	ret := _m.Called(ctx, req)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *model.PaymentProcessorRequest) error); ok {
		r0 = rf(ctx, req)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewPaymentProcessorUsecase creates a new instance of PaymentProcessorUsecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPaymentProcessorUsecase(t interface {
	mock.TestingT
	Cleanup(func())
}) *PaymentProcessorUsecase {
	mock := &PaymentProcessorUsecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
