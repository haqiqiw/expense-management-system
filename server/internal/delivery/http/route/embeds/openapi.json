{
  "openapi": "3.0.3",
  "info": {
    "title": "Expense Management API",
    "description": "A expense management system API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8500"
    }
  ],
  "paths": {
    "/api/users": {
      "post": {
        "tags": ["User API"],
        "description": "Create user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "john@mail.com"
                  },
                  "name": {
                    "type": "string",
                    "example": "John"
                  },
                  "password": {
                    "type": "string",
                    "example": "johnsecret"
                  },
                  "role": {
                    "type": "string",
                    "example": "manager"
                  }
                },
                "required": ["email", "name", "password", "role"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success register user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  },
                  "required": ["data", "meta"]
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "tags": ["User API"],
        "description": "Get current user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success get current user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  },
                  "required": ["data", "meta"]
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth API"],
        "description": "Login user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "john@mail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "johnsecret"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Token"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  },
                  "required": ["data", "meta"]
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Auth API"],
        "description": "Logout user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success logout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseMessage"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/api/expenses": {
      "post": {
        "tags": ["Expense API"],
        "description": "Create expense",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount_idr": {
                    "type": "integer",
                    "example": 10000
                  },
                  "description": {
                    "type": "string",
                    "example": "Office supplies"
                  },
                  "receipt_url": {
                    "type": "string",
                    "example": "https://example.com/receipt.jpg"
                  }
                },
                "required": ["amount_idr", "description"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create expense",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ExpenseCreate"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  },
                  "required": ["data", "meta"]
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Expense API"],
        "description": "Get list of expenses",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "required": false,
            "description": "The \"approval_queue\" view, only available for user with manager role",
            "schema": {
              "type": "string",
              "enum": ["personal", "approval_queue"],
              "default": "personal"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of expense, only available for personal view",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ExpenseStatusEnum"
            }
          },
          {
            "name": "auto_approved",
            "in": "query",
            "description": "Filter expenses that don't require approval (automatic), only available for personal view",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success get list of expenses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ExpenseList"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/MetaWithPage"
                    }
                  },
                  "required": ["data", "meta"]
                }
              }
            }
          }
        }
      }
    },
    "/api/expenses/{id}": {
      "get": {
        "tags": ["Expense API"],
        "description": "Get expense detail by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of expense",
            "schema": {
              "type": "string",
              "example": "1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success get expense detail",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ExpenseDetail"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  },
                  "required": ["data", "meta"]
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/api/expenses/{id}/approve": {
      "put": {
        "tags": ["Expense API"],
        "description": "Approve expense by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of expense",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notes": {
                    "type": "string",
                    "example": "Approved from my side",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success approve expense",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseMessage"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    },
    "/api/expenses/{id}/reject": {
      "put": {
        "tags": ["Expense API"],
        "description": "Reject expense by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of expense",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notes": {
                    "type": "string",
                    "example": "Rejected due to unclear reason",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success reject expense",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseMessage"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "email": {
            "type": "string",
            "example": "john@mail.com"
          },
          "name": {
            "type": "string",
            "example": "John"
          },
          "role": {
            "type": "string",
            "example": "manager"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["id", "email", "name", "role", "created_at"]
      },
      "UserSimple": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "email": {
            "type": "string",
            "example": "john@mail.com"
          },
          "name": {
            "type": "string",
            "example": "John"
          }
        },
        "required": ["id", "email", "name"]
      },
      "ExpenseStatusEnum": {
        "type": "string",
        "enum": ["awaiting_approval", "approved", "rejected", "completed"]
      },
      "ExpenseCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "amount_idr": {
            "type": "integer",
            "example": 10000
          },
          "description": {
            "type": "string",
            "example": "Office supplies"
          },
          "receipt_url": {
            "type": "string",
            "example": "https://example.com/receipt.jpg"
          },
          "status": {
            "$ref": "#/components/schemas/ExpenseStatusEnum"
          },
          "requires_approval": {
            "type": "boolean",
            "example": false
          },
          "auto_approved": {
            "type": "boolean",
            "example": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "amount_idr",
          "description",
          "receipt_url",
          "status",
          "requires_approval",
          "auto_approved",
          "created_at"
        ]
      },
      "ExpenseList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "amount_idr": {
            "type": "integer",
            "example": 10000
          },
          "description": {
            "type": "string",
            "example": "Office supplies"
          },
          "receipt_url": {
            "type": "string",
            "example": "https://example.com/receipt.jpg"
          },
          "status": {
            "$ref": "#/components/schemas/ExpenseStatusEnum"
          },
          "requires_approval": {
            "type": "boolean",
            "example": false
          },
          "auto_approved": {
            "type": "boolean",
            "example": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/UserSimple"
          }
        },
        "required": [
          "id",
          "amount_idr",
          "description",
          "receipt_url",
          "status",
          "requires_approval",
          "auto_approved",
          "created_at",
          "user"
        ]
      },
      "ExpenseDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "amount_idr": {
            "type": "integer",
            "example": 10000
          },
          "description": {
            "type": "string",
            "example": "Office supplies"
          },
          "receipt_url": {
            "type": "string",
            "example": "https://www.image.com/abc",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ExpenseStatusEnum"
          },
          "requires_approval": {
            "type": "boolean",
            "example": false
          },
          "auto_approved": {
            "type": "boolean",
            "example": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "processed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/UserSimple"
          },
          "approval": {
            "$ref": "#/components/schemas/ApprovalDetail",
            "nullable": true
          }
        },
        "required": [
          "id",
          "amount_idr",
          "description",
          "receipt_url",
          "status",
          "requires_approval",
          "auto_approved",
          "created_at",
          "processed_at",
          "user",
          "approval"
        ]
      },
      "ApprovalStatusEnum": {
        "type": "string",
        "enum": ["approve", "reject"]
      },
      "ApprovalDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "approver_id": {
            "type": "integer",
            "example": 1
          },
          "approver_email": {
            "type": "string",
            "example": "john@mail.com"
          },
          "approver_name": {
            "type": "string",
            "example": "John"
          },
          "status": {
            "$ref": "#/components/schemas/ApprovalStatusEnum"
          },
          "notes": {
            "type": "string",
            "example": "Approved from my side",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "approver_id",
          "approver_email",
          "approver_name",
          "status",
          "notes",
          "created_at"
        ]
      },
      "Token": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "example": "qwe.asd.zxc"
          }
        },
        "required": ["access_token"]
      },
      "Meta": {
        "type": "object",
        "properties": {
          "http_status": {
            "type": "integer",
            "example": 200
          }
        },
        "required": ["http_status"]
      },
      "MetaWithPage": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "example": 10
          },
          "offset": {
            "type": "integer",
            "example": 0
          },
          "total": {
            "type": "integer",
            "example": 25
          },
          "http_status": {
            "type": "integer",
            "example": 200
          }
        },
        "required": ["limit", "offset", "total", "http_status"]
      },
      "ErrorItem": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 100
          },
          "message": {
            "type": "string",
            "example": "message"
          }
        },
        "required": ["code", "message"]
      },
      "ResponseError": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorItem"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "required": ["errors", "meta"]
      },
      "ResponseMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "message"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "required": ["message", "meta"]
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Enter JWT in the format: Bearer <token>"
      }
    }
  }
}
